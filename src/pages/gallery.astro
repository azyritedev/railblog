---
import Tag from "@/components/Tag.astro";
import Layout from "@/layouts/Layout.astro";
import { getCollection } from "astro:content";

const tags = await getCollection("tags");
const photos = await getCollection("photos");
tags.sort((tagA, tagB) => {
  let tagACount = 0;
  let tagBCount = 0;

  photos.forEach((p) => {
    if (p.data.meta.tags.some((t) => t.id === tagA.id)) {
      tagACount++;
    }
    if (p.data.meta.tags.some((t) => t.id === tagB.id)) {
      tagBCount++;
    }
  });

  return tagBCount - tagACount;
});

const groups = new Set<string>();
for (const tag of tags) {
  groups.add(tag.data.group);
}
---

<Layout title="Photo Gallery">
  <div class="prose">
    <h1>Photo Gallery</h1>
    <p>
      <b>A quick organisational note:</b> Photos are grouped with tags; a photo may
      have multiple tags so may appear in multiple places. There are no "albums".
    </p>
    <p>
      I have tried to give a detailed description for each photo, although these
      are not searchable yet. This might become a feature in the future.
    </p>
    <p>
      There are a total of <b>{photos.length}</b> unique photos in the gallery. More
      on the way!
    </p>
    <p><i>Click on any tag below to go to its page and view its photos.</i></p>
  </div>
  <div class="mt-4">
    <h2 class="text-xl font-bold">Grouped Tags</h2>
    <p class="text-sm">
      Tags by their groups. For tag descriptions see <a
        href="#all"
        class="underline">All Tags</a
      >.
    </p>
    <div class="grid gap-4 grid-cols-1 md:grid-cols-3 xl:grid-cols-4 mt-2">
      {
        Array.from(groups).map((g) => (
          <div class="p-2 border">
            <h3 class="text-lg font-bold mb-1">{g}</h3>
            <div class="flex flex-wrap gap-2">
              {tags
                .filter((t) => t.data.group === g)
                .sort((tagA, tagB) => tagA.id.localeCompare(tagB.id))
                .map((t) => (
                  <Tag tag={t.id} />
                ))}
            </div>
          </div>
        ))
      }
    </div>
  </div>
  <div class="mt-4">
    <h2 class="text-xl font-bold" id="all">All Tags</h2>
    <p class="text-sm">All tags listed by photo count, descending</p>
    <div class="flex flex-col gap-2 mt-2">
      {
        tags.map((t) => (
          <div class="flex items-center gap-2">
            <Tag tag={t.id} />{" "}
            <div>
              <>
                <span>â€” {t.data.description} </span>
                <span class="text-sm italic">
                  (containing
                  {
                    photos.filter((p) =>
                      p.data.meta.tags.some((pt) => pt.id === t.id)
                    ).length
                  }
                  photos)
                </span>
              </>
            </div>
          </div>
        ))
      }
    </div>
  </div>
</Layout>
